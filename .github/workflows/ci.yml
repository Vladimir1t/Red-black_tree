name: Test Validation on Multiple OS

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # 1. Клонирование репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Установка зависимостей (Linux & macOS)
      - name: Install dependencies (Linux & macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt update
            sudo apt install -y build-essential cmake libgtest-dev
            cd /usr/src/gtest
            sudo cmake -S . -B build
            sudo cmake --build build
            sudo cp build/lib/*.a /usr/lib/
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            brew update
            brew install cmake googletest
          fi

      # 3. Установка зависимостей (Windows)
      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          # Установка CMake
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          
          # Установка GoogleTest с использованием vcpkg
          choco install vcpkg -y
          vcpkg install gtest

          # Настройка vcpkg и CMake
          echo "::add-path::C:\Program Files (x86)\vcpkg"
          echo "CMake settings: -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake"

      # 4. Сборка проекта
      - name: Build project
        run: |
          mkdir build
          cmake -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -S . -B build
          cmake --build build

      # 5. Запуск тестов
      - name: Run tests
        run: |
          cd build
          ctest --output-on-failure
